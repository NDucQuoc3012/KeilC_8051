C51 COMPILER V9.60.0.0   I2C_LCD                                                           09/15/2022 11:45:30 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE I2C_LCD
OBJECT MODULE PLACED IN .\Objects\i2c_lcd.obj
COMPILER INVOKED BY: D:\Program Files\C51\BIN\C51.EXE i2c_lcd.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\List
                    -ings\i2c_lcd.lst) TABS(2) OBJECT(.\Objects\i2c_lcd.obj)

line level    source

   1          #include<reg51.h>
   2          #include<intrins.h>
   3          
   4          void i2c_start(void);
   5          void i2c_stop(void);
   6          void i2c_ACK(void);
   7          void i2c_write(unsigned char);
   8          void i2c_DevWrite(unsigned char);
   9          void lcd_send_cmd(unsigned char);
  10          void lcd_send_data(unsigned char);
  11          void lcd_send_str(unsigned char *);
  12          void lcd_slave(unsigned char );
  13          void delay_ms(unsigned int);
  14          
  15          unsigned char slave1=0x4E;
  16          unsigned char slave_add;
  17          
  18          sbit scl=P0^6;
  19          sbit sda=P0^7;
  20          
  21          void i2c_start(void)
  22          {
  23   1      sda=1;_nop_();_nop_();
  24   1      scl=1;_nop_();_nop_();
  25   1      sda=0;_nop_();_nop_();
  26   1      }
  27          
  28          void i2c_stop(void)
  29          {
  30   1      scl=0;
  31   1      sda=0;
  32   1      scl=1;
  33   1      sda=1;
  34   1      }
  35          
  36          void lcd_slave(unsigned char slave)
  37          {
  38   1      slave_add=slave;
  39   1      }
  40          
  41          void i2c_ACK(void)
  42          {
  43   1      scl=0;
  44   1      sda=1;
  45   1      scl=1;
  46   1      while(sda);
  47   1      }
  48          
  49          void i2c_write(unsigned char dat)
  50          {
  51   1      unsigned char i;
  52   1      for(i=0;i<8;i++)
  53   1      {
  54   2      scl=0;
C51 COMPILER V9.60.0.0   I2C_LCD                                                           09/15/2022 11:45:30 PAGE 2   

  55   2      sda=(dat&(0x80)>>i)?1:0;
  56   2      scl=1;
  57   2      }
  58   1      }
  59          
  60          void lcd_send_cmd(unsigned char cmd)
  61          {
  62   1      unsigned char cmd_l,cmd_u;
  63   1      cmd_l=(cmd<<4)&0xf0;
  64   1      cmd_u=(cmd &0xf0);
  65   1      i2c_start();       //BL EN RW RS 1 1 0 0
  66   1      i2c_write(slave_add);
  67   1      i2c_ACK();
  68   1      i2c_write(cmd_u|0x0C);
  69   1      i2c_ACK();
  70   1      delay_ms(1);
  71   1      i2c_write(cmd_u|0x08); // 1 0 0 0
  72   1      i2c_ACK();
  73   1      delay_ms(10);
  74   1      i2c_write(cmd_l|0x0C);   // 1 1 0 0
  75   1      i2c_ACK();
  76   1      delay_ms(1);
  77   1      i2c_write(cmd_l|0x08);
  78   1      i2c_ACK();
  79   1      delay_ms(10);
  80   1      i2c_stop();
  81   1      }
  82          
  83          void lcd_send_data(unsigned char dataw)// 1 1 0 1
  84          {
  85   1      unsigned char dataw_l,dataw_u;
  86   1      dataw_l=(dataw<<4)&0xf0;
  87   1      dataw_u=(dataw &0xf0);
  88   1      i2c_start();
  89   1      i2c_write(slave_add);
  90   1      i2c_ACK();
  91   1      i2c_write(dataw_u|0x0D);//BL EN RW RS   1 1 0 1
  92   1      i2c_ACK();
  93   1      delay_ms(1);
  94   1      i2c_write(dataw_u|0x09);// 1 0 0 1
  95   1      i2c_ACK();
  96   1      delay_ms(10);
  97   1      i2c_write(dataw_l|0x0D);
  98   1      i2c_ACK();
  99   1      delay_ms(1);
 100   1      i2c_write(dataw_l|0x09);
 101   1      i2c_ACK();
 102   1      delay_ms(10);
 103   1      i2c_stop();
 104   1      }
 105          
 106          void lcd_send_str(unsigned char *p)
 107          {
 108   1      while(*p != '\0')
 109   1      lcd_send_data(*p++);
 110   1      }
 111          
 112          
 113          void delay_ms(unsigned int n)
 114          {
 115   1      unsigned int m;
 116   1      for(n;n>0;n--)
C51 COMPILER V9.60.0.0   I2C_LCD                                                           09/15/2022 11:45:30 PAGE 3   

 117   1      {
 118   2        for(m=121;m>0;m--);
 119   2          _nop_();
 120   2        _nop_();
 121   2        _nop_();
 122   2        _nop_();
 123   2        _nop_();
 124   2        _nop_();
 125   2      }
 126   1      }
 127          
 128          void lcd_init()
 129          {
 130   1      lcd_send_cmd(0x02); // Return home
 131   1      lcd_send_cmd(0x28); // 4 bit mode
 132   1      lcd_send_cmd(0x0C); // Display On , cursor off
 133   1      lcd_send_cmd(0x06); // Increment Cursor (shift cursor to right)
 134   1      lcd_send_cmd(0x01); // clear display
 135   1      }
 136          
 137          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    337    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2       7
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
